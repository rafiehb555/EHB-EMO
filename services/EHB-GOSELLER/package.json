{
  "name": "ehb-goseller",
  "version": "1.0.0",
  "description": "EHB Goseller - E-commerce Seller Management Platform",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\" \"npm run dev:admin\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:admin": "cd admin-panel && npm run dev",
    "build": "npm run build:frontend && npm run build:backend && npm run build:admin",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "build:admin": "cd admin-panel && npm run build",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install && cd ../admin-panel && npm install",
    "test": "npm run test:all",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:performance && npm run test:security",
    "test:unit": "jest tests/unit.test.js --coverage",
    "test:integration": "jest tests/integration.test.js --coverage",
    "test:e2e": "playwright test",
    "test:performance": "npm run lighthouse",
    "test:security": "npm run security:audit && snyk test",
    "test:coverage": "jest --coverage --coverageReporters=html",
    "test:watch": "jest --watch",
    "test:debug": "jest --detectOpenHandles --forceExit",
    "test:validation": "node scripts/validation/component-validator.js",
    "test:load": "artillery run tests/performance/load-config.yml",
    "test:stress": "artillery run tests/performance/stress-config.yml",
    "test:benchmark": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "lint": "npm run lint:frontend && npm run lint:backend && npm run lint:admin",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:admin": "cd admin-panel && npm run lint",
    "setup": "npm run setup:env && npm run setup:db && npm run setup:tools",
    "setup:env": "node scripts/setup-env.js",
    "setup:db": "node scripts/setup-database.js",
    "setup:tools": "node scripts/setup-tools.js",
    "clone:website": "node scripts/clone-website.js",
    "clone:universal": "node scripts/cli-cloner.js",
    "migrate:data": "node scripts/data-migration.js",
    "import:products": "node scripts/import-products.js",
    "import:customers": "node scripts/import-customers.js",
    "import:orders": "node scripts/import-orders.js",
    "setup:nextjs": "node scripts/run-nextjs-setup.js",
    "extract:platforms": "node scripts/platform-data-extractor.js",
    "integrate:nextjs": "node scripts/nextjs-integration.js",
    "setup:ai": "node scripts/run-ai-system.js",
    "setup:blockchain": "node scripts/run-blockchain-system.js",
    "setup:production": "node scripts/run-production-system.js",
    "setup:unified": "node scripts/run-master-integration.js",
    "setup:testing": "node scripts/run-testing-system.js",
    "setup:documentation": "node scripts/run-documentation-system.js",
    "setup:master": "node scripts/run-master-orchestration.js",
    "setup:final": "node scripts/run-final-launch.js",
    "setup:mastery": "node scripts/run-complete-mastery.js",
    "setup:grand": "node scripts/run-grand-finale.js",
    "setup:eternal": "node scripts/run-eternal-mastery.js",
    "setup:cosmic": "node scripts/run-cosmic-mastery.js",
    "setup:omniversal": "node scripts/run-omniversal-mastery.js",
    "setup:transcendental": "node scripts/run-transcendental-mastery.js",
    "setup:divine": "node scripts/run-divine-mastery.js",
    "mastery:complete": "node scripts/complete-platform-mastery-system.js",
    "mastery:test": "node scripts/complete-platform-mastery-system.js test",
    "mastery:validate": "node scripts/complete-platform-mastery-system.js validate",
    "mastery:optimize": "node scripts/complete-platform-mastery-system.js optimize",
    "grand:finale": "node scripts/grand-finale-achievement-system.js",
    "grand:test": "node scripts/grand-finale-achievement-system.js test",
    "grand:validate": "node scripts/grand-finale-achievement-system.js validate",
    "grand:optimize": "node scripts/grand-finale-achievement-system.js optimize",
    "eternal:mastery": "node scripts/eternal-mastery-system.js",
    "eternal:test": "node scripts/eternal-mastery-system.js test",
    "eternal:validate": "node scripts/eternal-mastery-system.js validate",
    "eternal:optimize": "node scripts/eternal-mastery-system.js optimize",
    "cosmic:mastery": "node scripts/cosmic-mastery-system.js",
    "cosmic:test": "node scripts/cosmic-mastery-system.js test",
    "cosmic:validate": "node scripts/cosmic-mastery-system.js validate",
    "cosmic:optimize": "node scripts/cosmic-mastery-system.js optimize",
    "omniversal:mastery": "node scripts/omniversal-mastery-system.js",
    "omniversal:test": "node scripts/omniversal-mastery-system.js test",
    "omniversal:validate": "node scripts/omniversal-mastery-system.js validate",
    "omniversal:optimize": "node scripts/omniversal-mastery-system.js optimize",
    "transcendental:mastery": "node scripts/transcendental-mastery-system.js",
    "transcendental:test": "node scripts/transcendental-mastery-system.js test",
    "transcendental:validate": "node scripts/transcendental-mastery-system.js validate",
    "transcendental:optimize": "node scripts/transcendental-mastery-system.js optimize",
    "divine:mastery": "node scripts/divine-mastery-system.js",
    "divine:test": "node scripts/divine-mastery-system.js test",
    "divine:validate": "node scripts/divine-mastery-system.js validate",
    "divine:optimize": "node scripts/divine-mastery-system.js optimize",
    "launch:platform": "node scripts/final-integration-launch-system.js",
    "start:all": "node scripts/master-orchestration-system.js start",
    "stop:all": "node scripts/master-orchestration-system.js stop",
    "restart:all": "node scripts/master-orchestration-system.js restart",
    "status:all": "node scripts/master-orchestration-system.js status",
    "monitor:all": "node scripts/master-orchestration-system.js monitor",
    "logs:all": "node scripts/master-orchestration-system.js logs",
    "health:all": "node scripts/master-orchestration-system.js health",
    "deploy:staging": "bash scripts/deployment/deploy.sh staging",
    "deploy:production": "bash scripts/deployment/deploy.sh production",
    "health:check": "bash scripts/deployment/health-check.sh",
    "monitor:performance": "npm run test:performance && npm run analyze:bundle",
    "analyze:bundle": "ANALYZE=true npm run build",
    "lighthouse": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "security:audit": "npm audit --audit-level moderate && snyk test",
    "backup:database": "bash scripts/deployment/backup.sh",
    "rollback": "bash scripts/deployment/rollback.sh",
    "verify:config": "node scripts/integration/verify-config.js",
    "logs:components": "node scripts/integration/component-logs.js",
    "migrate:unified": "node scripts/integration/unified-setup.js",
    "validate:components": "node scripts/validation/component-validator.js",
    "validate:integration": "node scripts/validation/integration-validator.js",
    "validate:performance": "node scripts/validation/performance-validator.js",
    "validate:security": "node scripts/validation/security-validator.js",
    "validate:data": "node scripts/validation/data-validator.js",
    "docs:generate": "node scripts/documentation/generate-docs.js",
    "docs:serve": "node scripts/documentation/serve-docs.js",
    "docs:build": "node scripts/documentation/build-docs.js"
  },
  "keywords": [
    "ecommerce",
    "seller",
    "management",
    "platform",
    "react",
    "nodejs",
    "typescript",
    "website-cloning",
    "data-migration",
    "nextjs",
    "blockchain",
    "ai",
    "machine-learning",
    "recommendations",
    "smart-contracts",
    "nft",
    "defi",
    "production",
    "deployment",
    "monitoring",
    "ci-cd",
    "unified-platform",
    "integration",
    "testing",
    "validation",
    "quality-assurance",
    "documentation",
    "knowledge-base",
    "master-orchestration",
    "complete-platform",
    "final-launch",
    "ecommerce-mastery",
    "platform-mastery",
    "grandmaster",
    "grand-finale",
    "legendary",
    "ultimate",
    "eternal",
    "pinnacle",
    "cosmic",
    "zenith",
    "omniversal",
    "apex",
    "transcendental",
    "transcendence",
    "divine",
    "divinity"
  ],
  "author": "EHB Team",
  "license": "MIT",
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@next/bundle-analyzer": "^14.0.0",
    "@sentry/nextjs": "^7.0.0",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@types/node": "^20.10.5",
    "artillery": "^2.0.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.56.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lighthouse": "^11.0.0",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "playwright": "^1.40.0",
    "prettier": "^3.1.1",
    "snyk": "^1.1000.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "axios": "^1.6.2",
    "chalk": "^5.3.0",
    "cheerio": "^1.0.0-rc.12",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "dotenv": "^16.3.1",
    "ethers": "^6.8.1",
    "express": "^5.1.0",
    "pg": "^8.11.3",
    "puppeteer": "^21.6.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ehb-5/goseller"
  },
  "bugs": {
    "url": "https://github.com/ehb-5/goseller/issues"
  },
  "homepage": "https://github.com/ehb-5/goseller#readme",
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*.d.ts",
      "!src/**/*.stories.{js,jsx,ts,tsx}"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  }
}
